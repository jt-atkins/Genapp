       PROCESS NODLL,NODYNAM,TEST(NOSEP),NOCICS,NOSQL,PGMN(LU)
      *+---------------------------------------------------------------+
      *| TLGACVS0                                                      |
      *| PRODUCT: IBM DEVELOPER FOR Z/OS                               |
      *| COMPONENT: IBM Z/OS AUTOMATED UNIT TESTING FRAMEWORK (ZUNIT)  |
      *|   FOR ENTERPRISE COBOL AND PL/I                               |
      *| PROGRAM: ENTERPRISE COBOL ZUNIT TEST CASE FOR DYNAMIC RUNNER  |
      *| DATE GENERATED: 04/25/2023 20:21                              |
      *| ID: fed097dc-f6d5-42dc-8b8e-ca645372ef8c                      |
      *+---------------------------------------------------------------+
      *+---------------------------------------------------------------+
      *| TEST_T1                                                       |
      *|     THIS PROGRAM IS FOR TEST T1                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_T1'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGACVS01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT00000039
       1 ZUT00000039.
      *    *** CA-REQUEST-ID : ZUT0000003A
         3 ZUT0000003A PIC X(6).
      *    *** CA-RETURN-CODE : ZUT0000003B
         3 ZUT0000003B PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT0000003C
         3 ZUT0000003C PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT0000003D
         3 ZUT0000003D PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT0000003E
         3 ZUT0000003E REDEFINES ZUT0000003D.
      *    *** CA-FIRST-NAME : ZUT0000003F
         5 ZUT0000003F PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000040
         5 ZUT00000040 PIC X(20).
      *    *** CA-DOB : ZUT00000041
         5 ZUT00000041 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT00000042
         5 ZUT00000042 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT00000043
         5 ZUT00000043 PIC X(4).
      *    *** CA-POSTCODE : ZUT00000044
         5 ZUT00000044 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT00000045
         5 ZUT00000045 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT00000046
         5 ZUT00000046 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT00000047
         5 ZUT00000047 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT00000048
         5 ZUT00000048 PIC X(100).
      *    *** CA-POLICY-DATA : ZUT00000049
         5 ZUT00000049 PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT0000004A
         3 ZUT0000004A REDEFINES ZUT0000003D.
      *    *** CA-CUSTSECR-PASS : ZUT0000004B
         5 ZUT0000004B PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT0000004C
         5 ZUT0000004C PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT0000004D
         5 ZUT0000004D PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT0000004E
         5 ZUT0000004E PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT0000004F
         3 ZUT0000004F REDEFINES ZUT0000003D.
      *    *** CA-POLICY-NUM : ZUT00000050
         5 ZUT00000050 PIC 9(10).
      *    *** CA-POLICY-COMMON : ZUT00000051
         5 ZUT00000051.
      *    *** CA-ISSUE-DATE : ZUT00000052
         7 ZUT00000052 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT00000053
         7 ZUT00000053 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT00000054
         7 ZUT00000054 PIC X(26).
      *    *** CA-BROKERID : ZUT00000055
         7 ZUT00000055 PIC 9(10).
      *    *** CA-BROKERSREF : ZUT00000056
         7 ZUT00000056 PIC X(10).
      *    *** CA-PAYMENT : ZUT00000057
         7 ZUT00000057 PIC 9(6).
      *    *** CA-POLICY-SPECIFIC : ZUT00000058
         5 ZUT00000058 PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT00000059
         5 ZUT00000059 REDEFINES ZUT00000058.
      *    *** CA-E-WITH-PROFITS : ZUT0000005A
         7 ZUT0000005A PIC X.
      *    *** CA-E-EQUITIES : ZUT0000005B
         7 ZUT0000005B PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT0000005C
         7 ZUT0000005C PIC X.
      *    *** CA-E-FUND-NAME : ZUT0000005D
         7 ZUT0000005D PIC X(10).
      *    *** CA-E-TERM : ZUT0000005E
         7 ZUT0000005E PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT0000005F
         7 ZUT0000005F PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT00000060
         7 ZUT00000060 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT00000061
         7 ZUT00000061 PIC X(32348).
      *    *** CA-HOUSE : ZUT00000062
         5 ZUT00000062 REDEFINES ZUT00000058.
      *    *** CA-H-PROPERTY-TYPE : ZUT00000063
         7 ZUT00000063 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT00000064
         7 ZUT00000064 PIC 9(3).
      *    *** CA-H-VALUE : ZUT00000065
         7 ZUT00000065 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT00000066
         7 ZUT00000066 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT00000067
         7 ZUT00000067 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT00000068
         7 ZUT00000068 PIC X(8).
      *    *** CA-H-FILLER : ZUT00000069
         7 ZUT00000069 PIC X(32342).
      *    *** CA-MOTOR : ZUT0000006A
         5 ZUT0000006A REDEFINES ZUT00000058.
      *    *** CA-M-MAKE : ZUT0000006B
         7 ZUT0000006B PIC X(15).
      *    *** CA-M-MODEL : ZUT0000006C
         7 ZUT0000006C PIC X(15).
      *    *** CA-M-VALUE : ZUT0000006D
         7 ZUT0000006D PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT0000006E
         7 ZUT0000006E PIC X(7).
      *    *** CA-M-COLOUR : ZUT0000006F
         7 ZUT0000006F PIC X(8).
      *    *** CA-M-CC : ZUT00000070
         7 ZUT00000070 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT00000071
         7 ZUT00000071 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT00000072
         7 ZUT00000072 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT00000073
         7 ZUT00000073 PIC 9(6).
      *    *** CA-M-FILLER : ZUT00000074
         7 ZUT00000074 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT00000075
         5 ZUT00000075 REDEFINES ZUT00000058.
      *    *** CA-B-ADDRESS : ZUT00000076
         7 ZUT00000076 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT00000077
         7 ZUT00000077 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT00000078
         7 ZUT00000078 PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT00000079
         7 ZUT00000079 PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT0000007A
         7 ZUT0000007A PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT0000007B
         7 ZUT0000007B PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT0000007C
         7 ZUT0000007C PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT0000007D
         7 ZUT0000007D PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT0000007E
         7 ZUT0000007E PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT0000007F
         7 ZUT0000007F PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT00000080
         7 ZUT00000080 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT00000081
         7 ZUT00000081 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT00000082
         7 ZUT00000082 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT00000083
         7 ZUT00000083 PIC 9(8).
      *    *** CA-B-STATUS : ZUT00000084
         7 ZUT00000084 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT00000085
         7 ZUT00000085 PIC X(255).
      *    *** CA-B-FILLER : ZUT00000086
         7 ZUT00000086 PIC X(31298).
      *    *** CA-CLAIM : ZUT00000087
         5 ZUT00000087 REDEFINES ZUT00000058.
      *    *** CA-C-NUM : ZUT00000088
         7 ZUT00000088 PIC 9(10).
      *    *** CA-C-DATE : ZUT00000089
         7 ZUT00000089 PIC X(10).
      *    *** CA-C-PAID : ZUT0000008A
         7 ZUT0000008A PIC 9(8).
      *    *** CA-C-VALUE : ZUT0000008B
         7 ZUT0000008B PIC 9(8).
      *    *** CA-C-CAUSE : ZUT0000008C
         7 ZUT0000008C PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT0000008D
         7 ZUT0000008D PIC X(255).
      *    *** CA-C-FILLER : ZUT0000008E
         7 ZUT0000008E PIC X(31854).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT00000019 ZUT00000039.
      * START
           DISPLAY 'AZU0000I TEST_T1 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL LGACVS01'
           CALL PROGRAM-NAME
           USING ZUT00000019 ZUT00000039
           .
      * EVALUATE OUTPUT VALUE
           MOVE 4 TO RETURN-CODE
      * END
           DISPLAY 'AZU0000I TEST_T1 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       END PROGRAM TEST_T1.
      *+---------------------------------------------------------------+
      *| TEST_T2                                                       |
      *|     THIS PROGRAM IS FOR TEST T2                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_T2'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGACVS01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT00000039
       1 ZUT00000039.
      *    *** CA-REQUEST-ID : ZUT0000003A
         3 ZUT0000003A PIC X(6).
      *    *** CA-RETURN-CODE : ZUT0000003B
         3 ZUT0000003B PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT0000003C
         3 ZUT0000003C PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT0000003D
         3 ZUT0000003D PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT0000003E
         3 ZUT0000003E REDEFINES ZUT0000003D.
      *    *** CA-FIRST-NAME : ZUT0000003F
         5 ZUT0000003F PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000040
         5 ZUT00000040 PIC X(20).
      *    *** CA-DOB : ZUT00000041
         5 ZUT00000041 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT00000042
         5 ZUT00000042 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT00000043
         5 ZUT00000043 PIC X(4).
      *    *** CA-POSTCODE : ZUT00000044
         5 ZUT00000044 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT00000045
         5 ZUT00000045 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT00000046
         5 ZUT00000046 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT00000047
         5 ZUT00000047 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT00000048
         5 ZUT00000048 PIC X(100).
      *    *** CA-POLICY-DATA : ZUT00000049
         5 ZUT00000049 PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT0000004A
         3 ZUT0000004A REDEFINES ZUT0000003D.
      *    *** CA-CUSTSECR-PASS : ZUT0000004B
         5 ZUT0000004B PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT0000004C
         5 ZUT0000004C PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT0000004D
         5 ZUT0000004D PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT0000004E
         5 ZUT0000004E PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT0000004F
         3 ZUT0000004F REDEFINES ZUT0000003D.
      *    *** CA-POLICY-NUM : ZUT00000050
         5 ZUT00000050 PIC 9(10).
      *    *** CA-POLICY-COMMON : ZUT00000051
         5 ZUT00000051.
      *    *** CA-ISSUE-DATE : ZUT00000052
         7 ZUT00000052 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT00000053
         7 ZUT00000053 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT00000054
         7 ZUT00000054 PIC X(26).
      *    *** CA-BROKERID : ZUT00000055
         7 ZUT00000055 PIC 9(10).
      *    *** CA-BROKERSREF : ZUT00000056
         7 ZUT00000056 PIC X(10).
      *    *** CA-PAYMENT : ZUT00000057
         7 ZUT00000057 PIC 9(6).
      *    *** CA-POLICY-SPECIFIC : ZUT00000058
         5 ZUT00000058 PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT00000059
         5 ZUT00000059 REDEFINES ZUT00000058.
      *    *** CA-E-WITH-PROFITS : ZUT0000005A
         7 ZUT0000005A PIC X.
      *    *** CA-E-EQUITIES : ZUT0000005B
         7 ZUT0000005B PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT0000005C
         7 ZUT0000005C PIC X.
      *    *** CA-E-FUND-NAME : ZUT0000005D
         7 ZUT0000005D PIC X(10).
      *    *** CA-E-TERM : ZUT0000005E
         7 ZUT0000005E PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT0000005F
         7 ZUT0000005F PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT00000060
         7 ZUT00000060 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT00000061
         7 ZUT00000061 PIC X(32348).
      *    *** CA-HOUSE : ZUT00000062
         5 ZUT00000062 REDEFINES ZUT00000058.
      *    *** CA-H-PROPERTY-TYPE : ZUT00000063
         7 ZUT00000063 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT00000064
         7 ZUT00000064 PIC 9(3).
      *    *** CA-H-VALUE : ZUT00000065
         7 ZUT00000065 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT00000066
         7 ZUT00000066 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT00000067
         7 ZUT00000067 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT00000068
         7 ZUT00000068 PIC X(8).
      *    *** CA-H-FILLER : ZUT00000069
         7 ZUT00000069 PIC X(32342).
      *    *** CA-MOTOR : ZUT0000006A
         5 ZUT0000006A REDEFINES ZUT00000058.
      *    *** CA-M-MAKE : ZUT0000006B
         7 ZUT0000006B PIC X(15).
      *    *** CA-M-MODEL : ZUT0000006C
         7 ZUT0000006C PIC X(15).
      *    *** CA-M-VALUE : ZUT0000006D
         7 ZUT0000006D PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT0000006E
         7 ZUT0000006E PIC X(7).
      *    *** CA-M-COLOUR : ZUT0000006F
         7 ZUT0000006F PIC X(8).
      *    *** CA-M-CC : ZUT00000070
         7 ZUT00000070 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT00000071
         7 ZUT00000071 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT00000072
         7 ZUT00000072 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT00000073
         7 ZUT00000073 PIC 9(6).
      *    *** CA-M-FILLER : ZUT00000074
         7 ZUT00000074 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT00000075
         5 ZUT00000075 REDEFINES ZUT00000058.
      *    *** CA-B-ADDRESS : ZUT00000076
         7 ZUT00000076 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT00000077
         7 ZUT00000077 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT00000078
         7 ZUT00000078 PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT00000079
         7 ZUT00000079 PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT0000007A
         7 ZUT0000007A PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT0000007B
         7 ZUT0000007B PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT0000007C
         7 ZUT0000007C PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT0000007D
         7 ZUT0000007D PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT0000007E
         7 ZUT0000007E PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT0000007F
         7 ZUT0000007F PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT00000080
         7 ZUT00000080 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT00000081
         7 ZUT00000081 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT00000082
         7 ZUT00000082 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT00000083
         7 ZUT00000083 PIC 9(8).
      *    *** CA-B-STATUS : ZUT00000084
         7 ZUT00000084 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT00000085
         7 ZUT00000085 PIC X(255).
      *    *** CA-B-FILLER : ZUT00000086
         7 ZUT00000086 PIC X(31298).
      *    *** CA-CLAIM : ZUT00000087
         5 ZUT00000087 REDEFINES ZUT00000058.
      *    *** CA-C-NUM : ZUT00000088
         7 ZUT00000088 PIC 9(10).
      *    *** CA-C-DATE : ZUT00000089
         7 ZUT00000089 PIC X(10).
      *    *** CA-C-PAID : ZUT0000008A
         7 ZUT0000008A PIC 9(8).
      *    *** CA-C-VALUE : ZUT0000008B
         7 ZUT0000008B PIC 9(8).
      *    *** CA-C-CAUSE : ZUT0000008C
         7 ZUT0000008C PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT0000008D
         7 ZUT0000008D PIC X(255).
      *    *** CA-C-FILLER : ZUT0000008E
         7 ZUT0000008E PIC X(31854).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT00000019 ZUT00000039.
      * START
           DISPLAY 'AZU0000I TEST_T2 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL LGACVS01'
           CALL PROGRAM-NAME
           USING ZUT00000019 ZUT00000039
           .
      * EVALUATE OUTPUT VALUE
           MOVE 4 TO RETURN-CODE
      * END
           DISPLAY 'AZU0000I TEST_T2 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       END PROGRAM TEST_T2.
      *+---------------------------------------------------------------+
      *| BZU_TEST                                                      |
      *|     THIS PROGRAM IS CALLBACK DEFINITION FOR TEST              |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TEST'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGACVS01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-GRP-INDEX        PIC 9(8).
       01 AZ-FLAG-IN          PIC 9(1).
       01 AZ-RECORD-PTR       POINTER.
       01 AZ-RC-WORK          PIC S9(4) USAGE BINARY.
       01 AZ-OUTPUT-COUNT-STR PIC X(5).
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT00000039
       1 ZUT00000039.
      *    *** CA-REQUEST-ID : ZUT0000003A
         3 ZUT0000003A PIC X(6).
      *    *** CA-RETURN-CODE : ZUT0000003B
         3 ZUT0000003B PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT0000003C
         3 ZUT0000003C PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT0000003D
         3 ZUT0000003D PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT0000003E
         3 ZUT0000003E REDEFINES ZUT0000003D.
      *    *** CA-FIRST-NAME : ZUT0000003F
         5 ZUT0000003F PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000040
         5 ZUT00000040 PIC X(20).
      *    *** CA-DOB : ZUT00000041
         5 ZUT00000041 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT00000042
         5 ZUT00000042 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT00000043
         5 ZUT00000043 PIC X(4).
      *    *** CA-POSTCODE : ZUT00000044
         5 ZUT00000044 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT00000045
         5 ZUT00000045 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT00000046
         5 ZUT00000046 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT00000047
         5 ZUT00000047 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT00000048
         5 ZUT00000048 PIC X(100).
      *    *** CA-POLICY-DATA : ZUT00000049
         5 ZUT00000049 PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT0000004A
         3 ZUT0000004A REDEFINES ZUT0000003D.
      *    *** CA-CUSTSECR-PASS : ZUT0000004B
         5 ZUT0000004B PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT0000004C
         5 ZUT0000004C PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT0000004D
         5 ZUT0000004D PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT0000004E
         5 ZUT0000004E PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT0000004F
         3 ZUT0000004F REDEFINES ZUT0000003D.
      *    *** CA-POLICY-NUM : ZUT00000050
         5 ZUT00000050 PIC 9(10).
      *    *** CA-POLICY-COMMON : ZUT00000051
         5 ZUT00000051.
      *    *** CA-ISSUE-DATE : ZUT00000052
         7 ZUT00000052 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT00000053
         7 ZUT00000053 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT00000054
         7 ZUT00000054 PIC X(26).
      *    *** CA-BROKERID : ZUT00000055
         7 ZUT00000055 PIC 9(10).
      *    *** CA-BROKERSREF : ZUT00000056
         7 ZUT00000056 PIC X(10).
      *    *** CA-PAYMENT : ZUT00000057
         7 ZUT00000057 PIC 9(6).
      *    *** CA-POLICY-SPECIFIC : ZUT00000058
         5 ZUT00000058 PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT00000059
         5 ZUT00000059 REDEFINES ZUT00000058.
      *    *** CA-E-WITH-PROFITS : ZUT0000005A
         7 ZUT0000005A PIC X.
      *    *** CA-E-EQUITIES : ZUT0000005B
         7 ZUT0000005B PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT0000005C
         7 ZUT0000005C PIC X.
      *    *** CA-E-FUND-NAME : ZUT0000005D
         7 ZUT0000005D PIC X(10).
      *    *** CA-E-TERM : ZUT0000005E
         7 ZUT0000005E PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT0000005F
         7 ZUT0000005F PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT00000060
         7 ZUT00000060 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT00000061
         7 ZUT00000061 PIC X(32348).
      *    *** CA-HOUSE : ZUT00000062
         5 ZUT00000062 REDEFINES ZUT00000058.
      *    *** CA-H-PROPERTY-TYPE : ZUT00000063
         7 ZUT00000063 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT00000064
         7 ZUT00000064 PIC 9(3).
      *    *** CA-H-VALUE : ZUT00000065
         7 ZUT00000065 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT00000066
         7 ZUT00000066 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT00000067
         7 ZUT00000067 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT00000068
         7 ZUT00000068 PIC X(8).
      *    *** CA-H-FILLER : ZUT00000069
         7 ZUT00000069 PIC X(32342).
      *    *** CA-MOTOR : ZUT0000006A
         5 ZUT0000006A REDEFINES ZUT00000058.
      *    *** CA-M-MAKE : ZUT0000006B
         7 ZUT0000006B PIC X(15).
      *    *** CA-M-MODEL : ZUT0000006C
         7 ZUT0000006C PIC X(15).
      *    *** CA-M-VALUE : ZUT0000006D
         7 ZUT0000006D PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT0000006E
         7 ZUT0000006E PIC X(7).
      *    *** CA-M-COLOUR : ZUT0000006F
         7 ZUT0000006F PIC X(8).
      *    *** CA-M-CC : ZUT00000070
         7 ZUT00000070 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT00000071
         7 ZUT00000071 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT00000072
         7 ZUT00000072 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT00000073
         7 ZUT00000073 PIC 9(6).
      *    *** CA-M-FILLER : ZUT00000074
         7 ZUT00000074 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT00000075
         5 ZUT00000075 REDEFINES ZUT00000058.
      *    *** CA-B-ADDRESS : ZUT00000076
         7 ZUT00000076 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT00000077
         7 ZUT00000077 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT00000078
         7 ZUT00000078 PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT00000079
         7 ZUT00000079 PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT0000007A
         7 ZUT0000007A PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT0000007B
         7 ZUT0000007B PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT0000007C
         7 ZUT0000007C PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT0000007D
         7 ZUT0000007D PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT0000007E
         7 ZUT0000007E PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT0000007F
         7 ZUT0000007F PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT00000080
         7 ZUT00000080 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT00000081
         7 ZUT00000081 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT00000082
         7 ZUT00000082 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT00000083
         7 ZUT00000083 PIC 9(8).
      *    *** CA-B-STATUS : ZUT00000084
         7 ZUT00000084 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT00000085
         7 ZUT00000085 PIC X(255).
      *    *** CA-B-FILLER : ZUT00000086
         7 ZUT00000086 PIC X(31298).
      *    *** CA-CLAIM : ZUT00000087
         5 ZUT00000087 REDEFINES ZUT00000058.
      *    *** CA-C-NUM : ZUT00000088
         7 ZUT00000088 PIC 9(10).
      *    *** CA-C-DATE : ZUT00000089
         7 ZUT00000089 PIC X(10).
      *    *** CA-C-PAID : ZUT0000008A
         7 ZUT0000008A PIC 9(8).
      *    *** CA-C-VALUE : ZUT0000008B
         7 ZUT0000008B PIC 9(8).
      *    *** CA-C-CAUSE : ZUT0000008C
         7 ZUT0000008C PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT0000008D
         7 ZUT0000008D PIC X(255).
      *    *** CA-C-FILLER : ZUT0000008E
         7 ZUT0000008E PIC X(31854).
       01 AZ-RECORD-COUNT     PIC 9(5) COMP-5.
       PROCEDURE DIVISION.
      * SET INPUT VALUE
           ENTRY "PGM_INPT_LGACVS01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT00000019 ZUT00000039.
           DISPLAY 'AZU0000I PGM_INPT_LGACVS01 INPUT VALUES...'.
           MOVE 0 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
      * EVALUATE OUTPUT VALUE
           ENTRY "PGM_OUTP_LGACVS01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT00000019 ZUT00000039.
           DISPLAY 'AZU0000I PGM_OUTP_LGACVS01 CHECK VALUES...'.
           MOVE 4 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN 'T1'
             PERFORM CHECK-REC-T1
             MOVE 4 TO RETURN-CODE
           WHEN 'T2'
             PERFORM CHECK-REC-T2
             MOVE 4 TO RETURN-CODE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
       TEARDOWN.
           DISPLAY 'AZU0000I BZU_TEST SUCCESSFUL.'
           GOBACK.
       CHECK-REC-T1.
      * CHECK RECORD COUNT FOR T1
      * FOR CICS WRITE ''KSDSCUST''
           MOVE 1 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN CICS WRITE ''KSDSCUST''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
      * FOR CICS FORMATTIME
           MOVE 5 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN CICS FORMATTIME.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
      * FOR CICS LINK ''LGSTSQ''
           MOVE 6 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 2 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''2''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN CICS LINK ''LGSTSQ''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
           EXIT.
       CHECK-REC-T2.
      * CHECK RECORD COUNT FOR T2
      * FOR CICS WRITE ''KSDSCUST''
           MOVE 1 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN CICS WRITE ''KSDSCUST''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
           EXIT.
       THROW-ASSERTION-M.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           EXIT.
       END PROGRAM BZU_TEST.
      *+---------------------------------------------------------------+
      *| BZU_INIT                                                      |
      *|     INITIAL PROCEDURE                                         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_INIT'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       01 AZ-TESTCASE-ID        PIC X(36)
           VALUE 'fed097dc-f6d5-42dc-8b8e-ca645372ef8c'.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       01 AZ-TEST-ID            PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST AZ-TEST-ID.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_INIT : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           MOVE AZ-TESTCASE-ID TO AZ-TEST-ID
           GOBACK.
       END PROGRAM BZU_INIT.
      *+---------------------------------------------------------------+
      *| BZU_TERM                                                      |
      *|     TERMINATION PROCEDURE                                     |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TERM'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_TERM : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           GOBACK.
       END PROGRAM BZU_TERM.
      *+---------------------------------------------------------------+
      *| EVALOPT                                                       |
      *|   FUNCTION TO EVALUATE THAT THE BIT OF OPTION DATA            |
      *|   (1) TAKE AND OF GROUP COMMON MASK AND OPTION IN ARG0        |
      *|   (2) CHECK IF THE GROUP MASK IS EQUAL TO (1)                 |
      *|       IF EQUAL,    RTN01 IS 0                                 |
      *|       IF NO EQUAL, RTN01 IS 1                                 |
      *+---------------------------------------------------------------+
       ID DIVISION.
       PROGRAM-ID. EVALOPT.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  OUT1-REC.
         05 OUT1-DATA                PIC X(1) OCCURS 8.
       01 OUT1-DATA-R REDEFINES OUT1-REC.
         05 OUT1-DATA-UP             PIC X(4).
         05 OUT1-DATA-DOWN           PIC X(4).
       01  OUT2-REC.
         05  OUT2-DATA               PIC X(1) OCCURS 8.
       01  OUT2-DATA-R REDEFINES OUT2-REC.
         05 OUT2-DATA-UP             PIC X(4).
         05 OUT2-DATA-DOWN           PIC X(4).
       01  WORK1-REC.
         05  WORK1-DATA              PIC X(1) OCCURS 8.
       01  WORK1-DATA-R REDEFINES WORK1-REC.
         05 WORK1-DATA-UP            PIC X(4).
         05 WORK1-DATA-DOWN          PIC X(4).
       01  WORK-AREA.
         05  WORK-HEX-UP             PIC 9(4)  COMP.
         05  WORK-HEX-DOWN           PIC 9(4)  COMP.
       01  HEX-CHG-BEF.
         05  HEX-CHANGE-LV           PIC X(1) VALUE LOW-VALUE.
         05  HEX-CHANGE-BEFORE       PIC X(1).
       01  HEX-CHG-AFT      REDEFINES  HEX-CHG-BEF.
         05  HEX-CHANGE-AFTER        PIC 9(4)  COMP.
       01  TBL-CHANGE-DATA.
          05  FILLER                 PIC  X(004) VALUE '0000'.
          05  FILLER                 PIC  X(001) VALUE '0'.
          05  FILLER                 PIC  X(004) VALUE '0001'.
          05  FILLER                 PIC  X(001) VALUE '1'.
          05  FILLER                 PIC  X(004) VALUE '0010'.
          05  FILLER                 PIC  X(001) VALUE '2'.
          05  FILLER                 PIC  X(004) VALUE '0011'.
          05  FILLER                 PIC  X(001) VALUE '3'.
          05  FILLER                 PIC  X(004) VALUE '0100'.
          05  FILLER                 PIC  X(001) VALUE '4'.
          05  FILLER                 PIC  X(004) VALUE '0101'.
          05  FILLER                 PIC  X(001) VALUE '5'.
          05  FILLER                 PIC  X(004) VALUE '0110'.
          05  FILLER                 PIC  X(001) VALUE '6'.
          05  FILLER                 PIC  X(004) VALUE '0111'.
          05  FILLER                 PIC  X(001) VALUE '7'.
          05  FILLER                 PIC  X(004) VALUE '1000'.
          05  FILLER                 PIC  X(001) VALUE '8'.
          05  FILLER                 PIC  X(004) VALUE '1001'.
          05  FILLER                 PIC  X(001) VALUE '9'.
          05  FILLER                 PIC  X(004) VALUE '1010'.
          05  FILLER                 PIC  X(001) VALUE 'A'.
          05  FILLER                 PIC  X(004) VALUE '1011'.
          05  FILLER                 PIC  X(001) VALUE 'B'.
          05  FILLER                 PIC  X(004) VALUE '1100'.
          05  FILLER                 PIC  X(001) VALUE 'C'.
          05  FILLER                 PIC  X(004) VALUE '1101'.
          05  FILLER                 PIC  X(001) VALUE 'D'.
          05  FILLER                 PIC  X(004) VALUE '1110'.
          05  FILLER                 PIC  X(001) VALUE 'E'.
          05  FILLER                 PIC  X(004) VALUE '1111'.
          05  FILLER                 PIC  X(001) VALUE 'F'.
          01  TBL-DATA REDEFINES TBL-CHANGE-DATA.
           05  TBL-CHG  OCCURS  16 TIMES.
             10  TBL-BIT-CHAR        PIC  X(004).
             10  TBL-HEX-CHAR        PIC  X(001).
       01 BIT-COUNT                  PIC 9(1).
       01 I                          PIC S9(8) COMP.
       LINKAGE SECTION.
       01 G-MASK.
         03 D-G-MASK                 PIC X(1) OCCURS 19.
       01 COM-MASK.
         03 D-COM-MASK               PIC X(1) OCCURS 19.
       01 O-ARG0.
         03 D-O-ARG0                 PIC X(1) OCCURS 19.
       01 BYTE-COUNT                 PIC S9(8) COMP.
       01 RTN01                      PIC 9(1).
       01 AZ-TEST                    PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       PROCEDURE DIVISION USING G-MASK COM-MASK O-ARG0 BYTE-COUNT
            RTN01.
       MAINPROC SECTION.
            MOVE 0 TO RTN01
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > BYTE-COUNT
              PERFORM ANDCOMMASK
              IF RTN01 = 1 THEN
                GOBACK
              END-IF
            END-PERFORM.
            EXIT PROGRAM.
       ANDCOMMASK.
      * CONVERT GROUP COMMON MASK TO BIT
            MOVE D-COM-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CONVERT OPTION IN ARG0 TO BIT
            MOVE D-O-ARG0(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT2-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT2-DATA-DOWN.
      * CREATE EVAL BIT FROM GROUP COMMON MASK BIT AND ARG0 BIT
            PERFORM VARYING BIT-COUNT FROM 1 BY 1 UNTIL BIT-COUNT > 8
              IF OUT1-DATA(BIT-COUNT) = '1' AND
                 OUT2-DATA(BIT-COUNT) = '1' THEN
                MOVE '1' TO WORK1-DATA(BIT-COUNT)
              ELSE
                MOVE '0' TO WORK1-DATA(BIT-COUNT)
              END-IF
            END-PERFORM.
      * CONVERT GROUP MASK TO BIT DATA
            MOVE D-G-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CHECK IF EQUAL BETWEEN EVAL BIT AND GROUP MASK BIT
            IF WORK1-DATA-UP = OUT1-DATA-UP AND
               WORK1-DATA-DOWN = OUT1-DATA-DOWN THEN
              CONTINUE
            ELSE
              MOVE 1 TO RTN01
            END-IF
            EXIT.
       CB-ENTRY.
      * ENTRY FOR CALLBACK
           ENTRY "PGM_INPT_EVALOPT" USING AZ-TEST AZ-INFO-BLOCK
             G-MASK COM-MASK O-ARG0 BYTE-COUNT RTN01.
           PERFORM MAINPROC.
           EXIT.
       END PROGRAM 'EVALOPT'.
      *+---------------------------------------------------------------+
      *| GTMEMRC                                                       |
      *|     GET DATA AREA FOR RECORD COUNT OF SUBSYSTEM GROUP         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'GTMEMRC'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZUGTMEM            PIC X(8) VALUE 'BZUGTMEM'.
       01 DATA-SIZE           PIC 9(8) COMP-4.
       LINKAGE SECTION.
       01 AZ-TC-WORK-AREA        PIC X(256).
       01 AZ-GRP-INDEX        PIC 9(8).
       01 AZ-FLAG-IN          PIC 9(1).
       01 AZ-RECORD-PTR       POINTER.
       01 AZ-RECORD-PTR-VALUE
            REDEFINES AZ-RECORD-PTR  PIC S9(9) COMP-5.
       01 DATA-PTR            POINTER.
       01 DATA-PTR-VALUE
            REDEFINES DATA-PTR  PIC S9(9) COMP-5.
       01 DATA-AREA.
         03 RECORD-COUNT-IO OCCURS 6.
           05 RECORD-COUNT-OT PIC 9(5) COMP-5.
           05 RECORD-COUNT-IN PIC 9(5) COMP-5.
       01 WK-RECORD-COUNT     PIC 9(5) COMP-5.
       01 AZ-TEST             PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       PROCEDURE DIVISION USING AZ-TC-WORK-AREA AZ-GRP-INDEX AZ-FLAG-IN
           AZ-RECORD-PTR.
       MAINPROC SECTION.
      * GET DATA AREA
           SET ADDRESS OF DATA-PTR TO ADDRESS OF AZ-TC-WORK-AREA.
           IF DATA-PTR-VALUE = 0 THEN
             COMPUTE DATA-SIZE = LENGTH OF WK-RECORD-COUNT * 2 * 6
             CALL BZUGTMEM USING DATA-SIZE RETURNING DATA-PTR
             SET ADDRESS OF DATA-AREA TO DATA-PTR
             DISPLAY 'AZU0000I AREA ALLOCATED FOR RECORD COUNT:'
           DATA-SIZE
           END-IF
           SET AZ-RECORD-PTR TO DATA-PTR
           COMPUTE AZ-RECORD-PTR-VALUE = AZ-RECORD-PTR-VALUE +
                 LENGTH OF WK-RECORD-COUNT * 2 * (AZ-GRP-INDEX - 1)
           IF AZ-FLAG-IN = 1 THEN
             ADD LENGTH OF WK-RECORD-COUNT TO AZ-RECORD-PTR-VALUE
           END-IF
           SET ADDRESS OF WK-RECORD-COUNT TO AZ-RECORD-PTR
           GOBACK.
       CB-ENTRY.
      * ENTRY FOR CALLBACK
           ENTRY "PGM_INPT_GTMEMRC" USING AZ-TEST AZ-INFO-BLOCK
             AZ-TC-WORK-AREA AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR.
           PERFORM MAINPROC.
           EXIT.
       END PROGRAM 'GTMEMRC'.
      *+---------------------------------------------------------------+
      *| AZU_GENERIC_CICS                                              |
      *|   GENERIC CICS CALLBACK EXIT POINT                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'AZU_GENERIC_CICS'.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT.
           ENTRY 'CICS_INPT'.
           DISPLAY 'AZU0000I CICS_INPT ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_OUTP.
           ENTRY 'CICS_OUTP'.
           DISPLAY 'AZU0000I CICS_OUTP ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_INPT_0E08 FOR RETURN.
           ENTRY 'CICS_INPT_0E08'.
           DISPLAY 'AZU0000I CICS_INPT_0E08 ...'
           MOVE 0 TO RETURN-CODE.
           GOBACK.
       END PROGRAM 'AZU_GENERIC_CICS'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS GROUP OF WRITE                          |
      *|    FUNCTION CODE: 0604                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0604_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-LEN           PIC S9(8) COMP.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0604_LGACVS01.
           ENTRY 'CICS_INPT_0604_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           DISPLAY 'AZU0000I CICS_0604_LGACVS01 CHECK VALUES...'
           CALL 'CICS_INPT_WRITE_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0604_LGACVS01.
           ENTRY 'CICS_OUTP_0604_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           DISPLAY 'AZU0000I CICS_0604_LGACVS01 INPUT VALUES...'
           CALL 'CICS_OUTP_WRITE_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           PERFORM TEARDOWN.
      * END
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0604_LGACVS01 SUCCESSFUL.'
           EXIT PROGRAM.
       END PROGRAM 'CICS_0604_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS WRITE                                   |
      *|    FUNCTION CODE: 0604                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_WRITE_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_WRITE_LGACVS01.
           ENTRY 'CICS_INPT_WRITE_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           DISPLAY 'AZU0000I CICS_WRITE_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC CICS WRITE "KSDSCUST"
           IF ARG0-1 = X'0604'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             IF AZ-CICS-TARGET-NAME-DEF8 = 'KSDSCUST'
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS WRITE "KSDSCUST"'
               ' L=' AZ-LINE-NUM
               MOVE 1 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_WRITE_LGACVS01.
           ENTRY 'CICS_OUTP_WRITE_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7.
           DISPLAY 'AZU0000I CICS_WRITE_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC CICS WRITE "KSDSCUST"
           IF ARG0-1 = X'0604'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             IF AZ-CICS-TARGET-NAME-DEF8 = 'KSDSCUST'
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS WRITE "KSDSCUST"'
               ' L=' AZ-LINE-NUM
               MOVE 1 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_WRITE_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_WRITE_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS ABEND                                   |
      *|    FUNCTION CODE: 0E0C                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E0C_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E0C_LGACVS01.
           ENTRY 'CICS_INPT_0E0C_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_0E0C_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ABEND X'8000'
           IF ARG0-1 = X'0E0C'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ABEND X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E0C_LGACVS01.
           ENTRY 'CICS_OUTP_0E0C_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_0E0C_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ABEND X'8000'
           IF ARG0-1 = X'0E0C'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ABEND X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E0C_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E0C_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS RETURN                                  |
      *|    FUNCTION CODE: 0E08                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E08_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E08_LGACVS01.
           ENTRY 'CICS_INPT_0E08_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E08_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 3 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E08_LGACVS01.
           ENTRY 'CICS_OUTP_0E08_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E08_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 3 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E08_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E08_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS ASKTIME                                 |
      *|    FUNCTION CODE: 4A02                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_4A02_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_4A02_LGACVS01.
           ENTRY 'CICS_INPT_4A02_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_4A02_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ASKTIME X'8000'
           IF ARG0-1 = X'4A02'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ASKTIME X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 4 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_4A02_LGACVS01.
           ENTRY 'CICS_OUTP_4A02_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_4A02_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ASKTIME X'8000'
           IF ARG0-1 = X'4A02'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ASKTIME X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 4 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_4A02_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_4A02_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS FORMATTIME                              |
      *|    FUNCTION CODE: 4A04                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_4A04_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 ARG11           POINTER.
       01 ARG12           POINTER.
       01 ARG13           POINTER.
       01 ARG14           POINTER.
       01 ARG15           POINTER.
       01 ARG16           POINTER.
       01 ARG17           POINTER.
       01 ARG18           POINTER.
       01 ARG19           POINTER.
       01 ARG20           POINTER.
       01 ARG21           POINTER.
       01 ARG22           POINTER.
       01 ARG23           POINTER.
       01 ARG24           POINTER.
       01 ARG25           POINTER.
       01 ARG26           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_4A04_LGACVS01.
           ENTRY 'CICS_INPT_4A04_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10 ARG11 ARG12 ARG13
           ARG14 ARG15 ARG16 ARG17 ARG18 ARG19 ARG20 ARG21 ARG22
           ARG23 ARG24 ARG25 ARG26.
           DISPLAY 'AZU0000I CICS_4A04_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'800200000008000000' TO AZ-OPT-COMMASK-DATA9(1).
      * EXEC CICS FORMATTIME X'800200000008000000'
           IF ARG0-1 = X'4A04'
             MOVE X'800200000008000000' TO AZ-OPT-MASK-DATA9
             MOVE 9 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA9
               AZ-OPT-COMMASK-DATA9(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS FORMATTIME X''800200000008000
      -    '000'''
                ' L=' AZ-LINE-NUM
               MOVE 5 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_4A04_LGACVS01.
           ENTRY 'CICS_OUTP_4A04_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10 ARG11 ARG12 ARG13
           ARG14 ARG15 ARG16 ARG17 ARG18 ARG19 ARG20 ARG21 ARG22
           ARG23 ARG24 ARG25 ARG26.
           DISPLAY 'AZU0000I CICS_4A04_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'800200000008000000' TO AZ-OPT-COMMASK-DATA9(1).
      * EXEC CICS FORMATTIME X'800200000008000000'
           IF ARG0-1 = X'4A04'
             MOVE X'800200000008000000' TO AZ-OPT-MASK-DATA9
             MOVE 9 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA9
               AZ-OPT-COMMASK-DATA9(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS FORMATTIME X''800200000008000
      -    '000'''
                ' L=' AZ-LINE-NUM
               MOVE 5 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_4A04_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_4A04_LGACVS01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS LINK                                    |
      *|    FUNCTION CODE: 0E02                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E02_LGACVS01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT00000019
       1 ZUT00000019.
      *    *** EIBTIME : ZUT0000001A
         2 ZUT0000001A PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000001B
         2 ZUT0000001B PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000001C
         2 ZUT0000001C PICTURE X(4).
      *    *** EIBTASKN : ZUT0000001D
         2 ZUT0000001D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT0000001E
         2 ZUT0000001E PICTURE X(4).
      *    *** DFHEIGDI : ZUT0000001F
         2 ZUT0000001F PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000020
         2 ZUT00000020 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000021
         2 ZUT00000021 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000022
         2 ZUT00000022 PICTURE X(1).
      *    *** EIBFN : ZUT00000023
         2 ZUT00000023 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000024
         2 ZUT00000024 PICTURE X(6).
      *    *** EIBDS : ZUT00000025
         2 ZUT00000025 PICTURE X(8).
      *    *** EIBREQID : ZUT00000026
         2 ZUT00000026 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000027
         2 ZUT00000027 PICTURE X(8).
      *    *** EIBSYNC : ZUT00000028
         2 ZUT00000028 PICTURE X.
      *    *** EIBFREE : ZUT00000029
         2 ZUT00000029 PICTURE X.
      *    *** EIBRECV : ZUT0000002A
         2 ZUT0000002A PICTURE X.
      *    *** EIBSEND : ZUT0000002B
         2 ZUT0000002B PICTURE X.
      *    *** EIBATT : ZUT0000002C
         2 ZUT0000002C PICTURE X.
      *    *** EIBEOC : ZUT0000002D
         2 ZUT0000002D PICTURE X.
      *    *** EIBFMH : ZUT0000002E
         2 ZUT0000002E PICTURE X.
      *    *** EIBCOMPL : ZUT0000002F
         2 ZUT0000002F PICTURE X(1).
      *    *** EIBSIG : ZUT00000030
         2 ZUT00000030 PICTURE X(1).
      *    *** EIBCONF : ZUT00000031
         2 ZUT00000031 PICTURE X(1).
      *    *** EIBERR : ZUT00000032
         2 ZUT00000032 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000033
         2 ZUT00000033 PICTURE X(4).
      *    *** EIBSYNRB : ZUT00000034
         2 ZUT00000034 PICTURE X.
      *    *** EIBNODAT : ZUT00000035
         2 ZUT00000035 PICTURE X.
      *    *** EIBRESP : ZUT00000036
         2 ZUT00000036 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT00000037
         2 ZUT00000037 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT00000038
         2 ZUT00000038 PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E02_LGACVS01.
           ENTRY 'CICS_INPT_0E02_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E02_LGACVS01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'E000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS LINK "LGSTSQ" X'E000'
           IF ARG0-1 = X'0E02'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             MOVE X'E000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-CICS-TARGET-NAME-DEF8 = 'LGSTSQ' AND
                AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS LINK "LGSTSQ" X''E000'''
               ' L=' AZ-LINE-NUM
               MOVE 6 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E02_LGACVS01.
           ENTRY 'CICS_OUTP_0E02_LGACVS01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT00000019 AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E02_LGACVS01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'E000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS LINK "LGSTSQ" X'E000'
           IF ARG0-1 = X'0E02'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             MOVE X'E000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-CICS-TARGET-NAME-DEF8 = 'LGSTSQ' AND
                AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS LINK "LGSTSQ" X''E000'''
               ' L=' AZ-LINE-NUM
               MOVE 6 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E02_LGACVS01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E02_LGACVS01'.
