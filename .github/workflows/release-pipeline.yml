name: ReleaseBuildPipelineTest
## Notes:
# A sample z/OS DBB workflow using GitHub Actions (GHA) with SSH connection
# Global vars
env:
  # SSH connection information
  DBB_Host: '"C:\Program Files\PuTTY\plink.exe" DMJTA1@WTSC47.CPOLAB.IBM.COM -pw ${{ secrets.WTSC47_PW }}' # A valid SSH account on Z. With pre-generated and tested keys in the runner.
  # Pipeline scripts on z/OS (relative to the SSH user's Home Dir in USS)
  Clone: '/u/DMJTA1/GitHubWS/scripts/git-clone-ssh.sh' # Script to clone the code from GitHub to z/OS
  DBB_Build: '/u/DMJTA1/GitHubWS/scripts/dbb-build.sh' # Script to perform the DBB build on z/OS
  UCD_Package: '/u/DMJTA1/GitHubWS/scripts/PublishUCD.sh' # Script to perform the DBB build on z/OS
  UCD_Deploy: '/u/DMJTA1/GitHubWS/scripts/DeployUCD.sh' # Script to perform the DBB build on z/OS
# "on" trigger to manually start this workflow. Can add "pull, push..." for auto trigger.
# see https://docs.github.com/en/actions/learn-github-actions/contexts
on:
  pull_request:
    types:
      - reopened
      
jobs:
  DBB_Build_on_zOS:
    runs-on: self-hosted
    env:
        # Project related variables. GHA automatically fills in relevant repository information for values enclosed in ${{ ... }}.
        MyRepo: git@github.com:${{ github.repository }}.git # Source code repository URL (SSH)
        MyBranch: ${{ github.ref }} # Branch on which to run the GHA pipeline
        MyWorkDir: /u/DMJTA1/GitHubWS/Genapp_run_${{ github.run_number }} # Absolute path to directory for storing the clone and build outputs
        MyWorkSpace: /u/DMJTA1/GitHubWS/Genapp_run_${{ github.run_number }}/GenappML2  # Absolute path to workspace (root) directory containing all required source directories
        MyApplication: cics-genapp # Application directory name (relative to MyWorkSpace)
        MyHlq: DMJTA1 # High level qualifier for partitioned data sets created during the build
    steps:
    
      - name: Set variable
        id: set_variable
        run: echo MY_VARIABLE=my value >> $GITHUB_ENV

      - name: Use variable in Step 2
        run: |
         echo The value of MY_VARIABLE is $MY_VARIABLE

      - name: Use variable in Step 3
        run: |
         echo The value of MY_VARIABLE is $MY_VARIABLE
    
  

