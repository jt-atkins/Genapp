name: FeaturePipelineFinal
## Notes:
# A sample z/OS DBB workflow using GitHub Actions (GHA) with SSH connection
# Global vars
env:
  # SSH connection information
  AppName: 'GenappML2'
  DBB_Host: '"C:\Program Files\PuTTY\plink.exe" DMJTA1@WTSC47.CPOLAB.IBM.COM -pw ${{ secrets.WTSC47_PW }}' # A valid SSH account on Z. With pre-generated and tested keys in the runner.
  # Pipeline scripts on z/OS (relative to the SSH user's Home Dir in USS)
  Clone: '/u/DMJTA1/GitHubWS/scripts/git-clone-ssh.sh' # Script to clone the code from GitHub to z/OS
  DBB_Build: '/u/DMJTA1/GitHubWS/scripts/dbb-build.sh' # Script to perform the DBB build on z/OS
  UCD_Package: '/u/DMJTA1/GitHubWS/scripts/PublishUCD.sh' # Script to perform the DBB build on z/OS
  UCD_Deploy: '/u/DMJTA1/GitHubWS/scripts/DeployUCD.sh' # Script to perform the DBB build on z/OS
# "on" trigger to manually start this workflow. Can add "pull, push..." for auto trigger.
# see https://docs.github.com/en/actions/learn-github-actions/contexts
  UCD_Dev_LPAR: 'DEV'
  UCD_Test_LPAR: 'TEST'
  UCD_Prod_LPAR: 'PROD'
  UCD_Server_URL: 'https://9.76.61.223:8443'
on: 
  workflow_dispatch:
    
        
jobs:
  DBB_Build_on_zOS:
    runs-on: self-hosted
    env:
        # Project related variables. GHA automatically fills in relevant repository information for values enclosed in ${{ ... }}.
        MyRepo: git@github.com:${{ github.repository }}.git # Source code repository URL (SSH)
        MyBranch: ${{ github.ref }} # Branch on which to run the GHA pipeline
        MyWorkDir: /u/DMJTA1/GitHubWS/Genapp_run_${{ github.run_number }} # Absolute path to directory for storing the clone and build outputs
        MyWorkSpace: /u/DMJTA1/GitHubWS/Genapp_run_${{ github.run_number }}/GenappML2  # Absolute path to workspace (root) directory containing all required source directories
        MyApplication: cics-genapp # Application directory name (relative to MyWorkSpace)
        UCDApplication: General-Insurance
        MyHlq: DMJTA1 # High level qualifier for partitioned data sets created during the build
        UCD_AppProps: /u/DMJTA1/zAppBuild/test/Jt-atkins-dbb-zappbuild1/GenappRepositoryProps.properties
        UCD_AppDeployProcess: 'Deploy'
        UCD_backendComponent: 'GeneralsBackendComponent'
    steps:
    
        - name: Retrieve branch name
          uses: mad9000/actions-find-and-replace-string@3
          id: getBranch
          with:
            source: "${{ github.ref }}"
            find: 'refs/heads/'        
            replace: ''
            
        - name: Remove - from build HLQ
          uses: mad9000/actions-find-and-replace-string@3
          id: removeChars
          with:
            source: "${{ steps.getBranch.outputs.value }}"
            find: '-'        
            replace: ''
        
        - name: Capture build HLQ for DBB
          uses: bhowell2/github-substring-action@1.0.2
          id: hlq
          with: 
            value: "${{ steps.removeChars.outputs.value }}"
            length_from_start: 8
                    
        - name: Clone repository
          run: ${{ env.DBB_Host }} ${{ env.Clone }} ${{ env.MyRepo }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyBranch }}
          shell: cmd 
          
        - name: DBB Impact Build
          run: ${{ env.DBB_Host }} ${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyApplication }} ${{ env.MyHlq }}.${{ steps.hlq.outputs.substring }} --impactBuild --verbose
          shell: cmd 
          
        - name: Package
          run: ${{ env.DBB_Host }} ${{ env.UCD_Package }} ${{ env.MyBranch }}.${{ github.run_number }}  ${{ env.UCD_backendComponent }} ${{ env.MyWorkDir }}  ${{ env.UCD_AppProps }}
          shell: cmd 

        - name: Deploy  
          run: ${{ env.DBB_Host }} ${{ env.UCD_Deploy }} ${{ env.UCDApplication }}  ${{ env.UCD_Dev_LPAR }} ${{ env.UCD_Server_URL }} ${{ env.UCD_backendComponent }}:${{ env.MyBranch }}.${{ github.run_number }}  ${{ env.UCD_AppDeployProcess }} ${{ env.UCD_AppProps }}
          shell: cmd 

        - name: Cleanup repository
          run: ${{ env.DBB_Host }} rm -r ${{ env.MyWorkSpace }}  
          shell: cmd 
